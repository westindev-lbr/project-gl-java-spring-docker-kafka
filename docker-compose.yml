version: '3.9'

services:
  product-ref-api:
    build:
      context: ./product-referencement
      dockerfile: Dockerfile.dev
    container_name: product-referencement-api
    restart: unless-stopped
    ports:
      - 8082:8082

  discount-man-api:
    build:
      context: ./discount-management
      dockerfile: Dockerfile.dev
    container_name: discount-management-api
    restart: unless-stopped
    environment:
      - PRODUCT_REFERENCEMENT_API_URL=http://localhost:8082
    ports:
      - 8083:8083

  kata-akhq:
    image: tchiotludo/akhq
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kata-kafka:29092"
    ports:
      - 3000:8080
    links:
      - kata-kafka
    depends_on:
      - kata-kafka_init

  kata-zookeeper:
    image: confluentinc/cp-zookeeper
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data:Z
      - zookeeper-log:/var/lib/zookeeper/log:Z
    environment:
      ZOOKEEPER_CLIENT_PORT: '2181'
      ZOOKEEPER_ADMIN_ENABLE_SERVER: 'false'

  kata-kafka:
    image: confluentinc/cp-kafka
    volumes:
      - kafka-data:/var/lib/kafka/data:Z
    environment:
      KAFKA_BROKER_ID: '0'
      KAFKA_ZOOKEEPER_CONNECT: 'kata-zookeeper:2181'
      KAFKA_NUM_PARTITIONS: '12'
      KAFKA_COMPRESSION_TYPE: 'gzip'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: '1'
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: '1'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://:29092,PLAINTEXT_HOST://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kata-kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: 'false'
      KAFKA_JMX_PORT: '9091'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_AUTHORIZER_CLASS_NAME: 'kafka.security.authorizer.AclAuthorizer'
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: 'true'
    links:
      - kata-zookeeper
    ports:
      - 9092:9092

  kata-kafka_init:
    image: confluentinc/cp-kafka
    depends_on:
      - kata-kafka
    restart: "no"
    entrypoint: ["/bin/sh", "-c"]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kata-kafka:29092 --list
      # alternatively with cp: cub kafka-ready -b kafka:29092 1 30 &&

      # just to make sure everything else are done
      sleep 5

      echo 'Creating kafka topics'

      kafka-topics --bootstrap-server kata-kafka:29092 --topic article_topic --create --partitions 3 --replication-factor 1 --if-not-exists
      kafka-topics --bootstrap-server kata-kafka:29092 --topic discount_topic --create --partitions 3 --replication-factor 1 --if-not-exists

      echo 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kata-kafka:29092 --list
      "

volumes:
  zookeeper-data:
    driver: local
  zookeeper-log:
    driver: local
  kafka-data:
    driver: local
